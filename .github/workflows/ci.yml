name: ci

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: pip install -r dev-requirements.txt

      - name: Code analysis
        run: pylint surveillance_bot

      - name: Type checking
        run: mypy surveillance_bot

      - name: Run tests
        run: PYTHONPATH=$PWD pytest --cov=surveillance_bot --cov-report xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v2

  pypi-publishing:
    runs-on: ubuntu-latest
    needs: [tests]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build package
        run: python setup.py sdist bdist_wheel

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  docker-publishing:
    runs-on: ubuntu-latest
    needs: [tests]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: pchinea/telegram-surveillance-bot-test
          tags: type=semver,pattern={{version}}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=pchinea/telegram-surveillance-bot-test:latest
          cache-to: type=inline